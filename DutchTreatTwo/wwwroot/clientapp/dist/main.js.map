{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./app/app.component.html","webpack:///./app/app.component.ts","webpack:///./app/app.module.ts","webpack:///./app/shared/dataService.ts","webpack:///./app/shared/order.ts","webpack:///./app/shop/cart.component.html","webpack:///./app/shop/cart.component.ts","webpack:///./app/shop/productList.component.css","webpack:///./app/shop/productList.component.html","webpack:///./app/shop/productList.component.ts","webpack:///./environments/environment.ts","webpack:///./main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"row\\\">\\r\\n   <div class=\\\"col-md-9\\\">\\r\\n      <h3>{{ title }}</h3>\\r\\n      <product-list></product-list>\\r\\n   </div>\\r\\n   <div class=\\\"col-md-3\\\">\\r\\n      <div class=\\\"card bg-light p-2\\\">\\r\\n          <the-cart></the-cart>\\r\\n      </div>\\r\\n   </div> \\r\\n</div>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'the-shop',\r\n  templateUrl: \"./app.component.html\",\r\n  styles: []\r\n})\r\nexport class AppComponent {\r\n  title = 'Product List';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ProductList } from \"./shop/productList.component\";\r\nimport { Cart } from \"./shop/cart.component\";\r\nimport { DataService } from \"./shared/dataService\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ProductList,\r\n    Cart\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [\r\n    DataService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","﻿import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Product } from \"./product\";\r\nimport * as OrderNS from \"./order\";\r\n\r\n@Injectable()\r\nexport class DataService {\r\n\r\n  constructor(private http: HttpClient) {\r\n\r\n  }\r\n\r\n  public products: Product[] = [];\r\n  public order: OrderNS.Order = new OrderNS.Order();\r\n\r\n  loadProducts(): Observable<boolean> {\r\n    return this.http.get(\"/api/products\")\r\n      .pipe(\r\n        map((data: any[]) => {\r\n          this.products = data;\r\n          return true;\r\n        })\r\n      );\r\n  }\r\n\r\n  addToOrder(newProduct: Product) {\r\n    var item = new OrderNS.OrderItem();\r\n    item.productId = newProduct.id;\r\n    item.productArtist = newProduct.artist;\r\n    item.productArtId = newProduct.artId;\r\n    item.productCategory = newProduct.category;\r\n    item.productSize = newProduct.size;\r\n    item.productTitle = newProduct.title;\r\n    item.unitPrice = newProduct.price;\r\n    item.quantity = 1;\r\n\r\n    this.order.items.push(item);\r\n  }\r\n}","﻿\r\nexport class Order {\r\n  orderId: number;\r\n  orderDate: Date = new Date();\r\n  orderNumber: string;\r\n  items: Array<OrderItem> = new Array<OrderItem>();\r\n}\r\n\r\nexport class OrderItem {\r\n  id: number;\r\n  quantity: number;\r\n  unitPrice: number;\r\n  productId: number;\r\n  productCategory: string;\r\n  productSize: string;\r\n  productTitle: string;\r\n  productArtist: string;\r\n  productArtId: string;\r\n}","module.exports = \"<h3>Shopping Cart</h3>    \\r\\n<div>Count: {{ data.order.items.length }} </div>\\r\\n\"","﻿import { Component } from \"@angular/core\";\r\nimport { DataService } from \"../shared/dataService\";\r\n\r\n@Component({\r\n  selector: \"the-cart\",\r\n  templateUrl: \"cart.component.html\",\r\n  styleUrls: []\r\n})\r\nexport class Cart {\r\n  constructor(private data: DataService) {\r\n\r\n  }\r\n}","module.exports = \".product-info img {\\r\\n    max-width: 100px;\\r\\n    float: left;\\r\\n    margin: 0 2px;\\r\\n    border: solid 1px black;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsaWVudGFwcC9hcHAvc2hvcC9wcm9kdWN0TGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksaUJBQWlCO0lBQ2pCLFlBQVk7SUFDWixjQUFjO0lBQ2Qsd0JBQXdCO0NBQzNCIiwiZmlsZSI6ImNsaWVudGFwcC9hcHAvc2hvcC9wcm9kdWN0TGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnByb2R1Y3QtaW5mbyBpbWcge1xyXG4gICAgbWF4LXdpZHRoOiAxMDBweDtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgbWFyZ2luOiAwIDJweDtcclxuICAgIGJvcmRlcjogc29saWQgMXB4IGJsYWNrO1xyXG59Il19 */\"","module.exports = \"<div class=\\\"row\\\">  \\r\\n\\r\\n    <div class=\\\"product-info col-md-4\\\"  *ngFor=\\\"let p of products\\\">\\r\\n        <div class=\\\"card bg-light p-1 m-1\\\">\\r\\n            <img src=\\\"/img/{{ p.artId }}.jpg\\\" [alt]=\\\"p.title\\\" class=\\\"img-fluid\\\" />\\r\\n            <h3>{{ p.category }} - {{ p.size }} </h3>\\r\\n            <ul class=\\\"product-props\\\">\\r\\n                <li><strong>Price</strong>: {{ p.price  | currency }}</li>\\r\\n                <li><strong>Artist</strong>: {{ p.artist }} </li>\\r\\n                <li><strong>Title</strong>: {{ p.title }}</li>\\r\\n                <li><strong>Description</strong>: {{ p.artDescription }}</li>\\r\\n            </ul>\\r\\n            <button id=\\\"buyButton\\\" class=\\\"btn-success\\\" (click)=\\\"addProduct(p)\\\">Buy</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","﻿import { Component, OnInit } from \"@angular/core\";\r\nimport { DataService } from \"../shared/dataService\";\r\nimport { Product } from \"../shared/product\";\r\n\r\n@Component({\r\n   selector: \"product-list\",\r\n   templateUrl: \"productList.component.html\",\r\n   styleUrls: [ \"productList.component.css\" ]\r\n})\r\nexport class ProductList implements OnInit {\r\n   \r\n   constructor(private dataService: DataService) {\r\n   }\r\n   \r\n   public products: Product[];\r\n\r\n   ngOnInit(): void {\r\n      this.dataService.loadProducts()\r\n         .subscribe(success => {\r\n            if (success) {\r\n               this.products = this.dataService.products;\r\n            }\r\n         });\r\n  }\r\n\r\n\r\n  addProduct(product: Product) {\r\n    this.dataService.addToOrder(product);\r\n  }\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}