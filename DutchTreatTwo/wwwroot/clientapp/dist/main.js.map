{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./app/app.component.html","webpack:///./app/app.component.ts","webpack:///./app/app.module.ts","webpack:///./app/shared/dataService.ts","webpack:///./app/shop/productList.component.html","webpack:///./app/shop/productList.component.ts","webpack:///./environments/environment.ts","webpack:///./main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"row\\\">\\r\\n   <div class=\\\"col-md-9\\\">\\r\\n      <h3>{{ title }}</h3>\\r\\n      <product-list></product-list>\\r\\n   </div>\\r\\n   <div class=\\\"col-md-3\\\">\\r\\n      <div class=\\\"card bg-light\\\">\\r\\n         <h3>Cart</h3>\\r\\n      </div>\\r\\n   </div> \\r\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'the-shop',\n  templateUrl: \"./app.component.html\",\n  styles: []\n})\nexport class AppComponent {\n  title = 'Product List';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from \"@angular/common/http\";\n\nimport { AppComponent } from './app.component';\nimport { ProductList } from \"./shop/productList.component\";\nimport { DataService } from \"./shared/dataService\";\n\n@NgModule({\n  declarations: [\n     AppComponent,\n     ProductList\n  ],\n  imports: [\n     BrowserModule,\n     HttpClientModule\n  ],\n   providers: [\n      DataService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","﻿import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\n@Injectable()\r\nexport class DataService {\r\n   //public products = [\r\n   //   {\r\n   //      title: \"First Product\",\r\n   //      price: 19.99\r\n   //   },\r\n   //   {\r\n   //      title: \"Second Product\",\r\n   //      price: 9.99\r\n   //   },\r\n   //   {\r\n   //      title: \"Third Product\",\r\n   //      price: 11.99\r\n   //   }\r\n   //];\r\n\r\n   constructor(private http: HttpClient) {\r\n\r\n   }\r\n\r\n   public products = [];\r\n\r\n   loadProducts() {\r\n      return this.http.get(\"/api/products\")\r\n         .pipe(\r\n            map((data: any[]) => {\r\n            this.products = data;\r\n               return true;\r\n            })\r\n         );\r\n   }\r\n}","module.exports = \"<div class=\\\"row\\\">\\r\\n   <ul>\\r\\n      <li *ngFor=\\\"let p of products\\\"> {{ p.title }}: {{ p.price  | currency }}</li>\\r\\n   </ul>\\r\\n</div>\"","﻿import { Component, OnInit } from \"@angular/core\";\r\nimport { DataService } from \"../shared/dataService\";\r\n\r\n@Component({\r\n   selector: \"product-list\",\r\n   templateUrl: \"productList.component.html\",\r\n   styleUrls: []\r\n})\r\nexport class ProductList implements OnInit {\r\n   \r\n   constructor(private dataService: DataService) {\r\n   }\r\n   \r\n   products: any[];\r\n\r\n   ngOnInit(): void {\r\n      this.dataService.loadProducts()\r\n         .subscribe(success => {\r\n            if (success) {\r\n               this.products = this.dataService.products;\r\n            }\r\n         });\r\n   }\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}